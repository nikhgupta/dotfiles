#!/usr/bin/env ruby
#
# ---------------------------------------------------------------------
#
#   Summary:     Measures average run time for a command
#   Author:      Nikhil Gupta
#   Description: This script measures average time spent when running
#                a command by running it a number of times
#                (default: runs command 5 times)
#
#   Usage:       avgtime [-n TIMES] [-q|v] COMMAND
#
# ---------------------------------------------------------------------

require 'optparse'

repeat = 10
short = quiet = verbose = false

ARGV.options do |opts|
  opts.on("-n", "--times")   {|val| repeat = val.to_i }
  opts.on("-q", "--quiet")   { quiet = true }
  opts.on("-s", "--short")   { short = quiet = true }
  opts.on("-v", "--verbose") { verbose = true }
  opts.on("-h", "--help")    { puts %x(list-commands #{$0}); exit(0); }
  opts.parse!
end

command = ARGV.join(" ")

unless quiet
  puts "Running command (#{repeat} times): #{command}"
  puts "Note that, there will be a slight overhead."
  puts "If this is a concern, please run again with \`-q\` flag."
  puts
  puts "Rehearsal:"
  puts `#{command}`
  puts "----------"
end

_command = quiet || !verbose ? "#{command} 2&>1 &>/dev/null" : command

time_taken = 0
repeat.times do |n|
  print "Run #{n}: " unless short
  start_time = Time.now
  `#{command} &>/dev/null`
  _time_taken = (Time.now - start_time) * 1000.0
  puts "%dms" % _time_taken unless short
  time_taken += _time_taken
end

average = (time_taken / repeat.to_f).to_i
if short
  puts average
else
  print "average time (#{repeat} runs): \e[35m#{ARGV.join(" ")}\e[0m: "
  case
  when average > 10000 then puts "\e[31m#{average}ms\e[0m"
  when average >  5000 then puts "\e[33m#{average}ms\e[0m"
  else puts "\e[32m#{average}ms\e[0m"
  end
end
