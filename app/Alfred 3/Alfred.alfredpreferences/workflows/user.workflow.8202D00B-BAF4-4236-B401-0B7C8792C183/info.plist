<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.temporaryemail</string>
	<key>connections</key>
	<dict>
		<key>1BFF14FC-DF72-4BC9-807B-3D38432CF08D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>251EB33C-C8AE-481C-8984-BC8CC206D2F2</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9066A3FA-E9D2-44AF-BB72-A54ABBEB3A3D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>1BFF14FC-DF72-4BC9-807B-3D38432CF08D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Get a temporary email inbox</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>TemporaryEmail</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>keyword</key>
				<string>tmpmail</string>
				<key>subtext</key>
				<string>Get a temporary email inbox</string>
				<key>text</key>
				<string>TemporaryEmail</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>9066A3FA-E9D2-44AF-BB72-A54ABBEB3A3D</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>notification() {
  ./_licensed/terminal-notifier/terminal-notifier.app/Contents/MacOS/terminal-notifier -title "${alfred_workflow_name}" -message "${1}"
}

argument='{query}'

if [[ -n "${argument}" ]]; then
  argument=$(echo "${argument}" | sed 's| ||g')
  email="${argument}@teleosaurs.xyz"
  url="https://teleosaurs.xyz/inbox/${argument}"
else
  email=$(curl --silent 'https://fakena.me/fake-name/' | grep 'https://teleosaurs.xyz/inbox/' | sed -E 's/.*&gt;(.*@teleosaurs.xyz).*/\1/')
  url=$(echo -n "${email}" | sed -E 's|(.*)@.*|http://teleosaurs.xyz/inbox/\1|')
fi

front_browser=$(osascript -e 'tell application "System Events" to return name of first process whose frontmost is true')

if [[ "${front_browser}" == "Safari" || "${front_browser}" == "Webkit" ]]; then
  osascript &lt;&lt;EOF
    tell application "${front_browser}"
      set tabIndex to index of current tab of front window
      open location "${url}"
      tell front window to set current tab to tab tabIndex
    end tell
EOF
elif [[ "${front_browser}" == "Google Chrome" || "${front_browser}" == "Google Chrome Canary" || "${front_browser}" == "Chromium" ]]; then
  osascript &lt;&lt;EOF
    tell application "${front_browser}"
      set tabIndex to active tab index of front window
      open location "${url}"
      set active tab index of front window to tabIndex
    end tell
EOF
else
  notification "You need a supported browser as your frontmost app"
  exit 1
fi

echo -n "${email}" | pbcopy
notification "Temporary email address copied to clipboard"</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>1BFF14FC-DF72-4BC9-807B-3D38432CF08D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly workflow_type='workflow'
readonly frequency_check='15'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED UNLESS YOU KNOW WHAT YOU ARE DOING
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local readonly terminal_notifier="$(find . -name terminal-notifier.app)"

  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}"/Contents/MacOS/terminal-notifier -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
  else
    osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
  fi
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${workflow_type}" =~ ^(workflow|page)$ ]] || abort "'workflow_type' (${workflow_type}) needs to be one of 'workflow' or 'page'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" != "${remote_version}" ]]; then
    if [[ "${workflow_type}" == 'page' ]]; then
      notification 'Opening download page…'
      open "${workflow_url}"
    else
      if url_exists "${workflow_url}"; then
        notification 'Downloading and installing…'
        curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${workflow_url}"
        open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
      else
        abort "'workflow_url' (${workflow_url}) appears to not be reachable."
      fi # url_exists
    fi # workflow_type
  else
    touch "${local_info_plist}" # Reset timer by touching local file
  fi # diff
fi #find</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>251EB33C-C8AE-481C-8984-BC8CC206D2F2</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Create temporary email inboxes via [Teleosaurs Mail](http://teleosaurs.xyz/).
 
When you have a supported browser (Safari, Webkit, Google Chrome, Google Chrome Canary, or Chromium) as your frontmost app, call `tmpmail`. The workflow will copy a temporary email address to your clipboard and open a background tab with the corresponding inbox. Give an argument to `tmpmail` if you want to use a specific name in the email.

![](http://i.imgur.com/z32IGHl.gif)</string>
	<key>uidata</key>
	<dict>
		<key>1BFF14FC-DF72-4BC9-807B-3D38432CF08D</key>
		<dict>
			<key>xpos</key>
			<integer>260</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>251EB33C-C8AE-481C-8984-BC8CC206D2F2</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>470</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
		<key>9066A3FA-E9D2-44AF-BB72-A54ABBEB3A3D</key>
		<dict>
			<key>xpos</key>
			<integer>60</integer>
			<key>ypos</key>
			<integer>10</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.0.3</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
