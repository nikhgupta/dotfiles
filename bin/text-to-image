#!/usr/bin/env ruby
#
# ---------------------------------------------------------------------
#
#   Summary: Convert text to an image file, and transfer it online
#   Author:  Nikhil Gupta
#   Usage:   text-to-image [-h|--help]
#
# ---------------------------------------------------------------------
#

require 'tempfile'
require 'optparse'
require 'digest/sha2'

title = name = extra_args = nil
format, color, background = :png, "#333333", "#efefef"
padding, fontsize = 40, 20

ARGV.options do |opts|
  opts.on("-n", "--name NAME")            {|val| name = val}
  opts.on("-t", "--title TITLE")          {|val| title = val}
  opts.on("-b", "--background BG_COLOR")  {|val| background = val}
  opts.on("-c", "--color TEXT_COLOR")     {|val| color = val}
  opts.on("-p", "--padding SIZE")         {|val| padding = val}
  opts.on("-f", "--font-size SIZE")       {|val| fontsize = val}
  opts.on("--as FORMAT")                  {|val| format = val}
  opts.on("-e", "--extra-arguments ARGS") {|val| extra_args = val}
  opts.on("-h", "--help") { puts %x(list-commands #{$0}); exit(0); }
  opts.parse!
end

read_from_terminal = (not STDIN.tty? and not STDIN.closed?)
text = read_from_terminal ? STDIN.read : File.read(ARGV.first)

name ||= ARGV.first
name ||= Digest::SHA256.hexdigest(Time.now.to_f.to_s)
text   = "#{title}\n#{"=" * title.length}\n\n#{text}" unless title.to_s.empty?

# -font -label -orient -page -pointsize -quality -size -style -weight 
conversion  = "convert -background #{background} -fill #{color} -pointsize #{fontsize}"
conversion += " -border #{padding}x#{padding} -bordercolor #{background}" if padding.to_i > 0
conversion += " #{extra_args}" unless extra_args.to_s.empty?
conversion += " label:@- #{format}:- "

exec("echo '#{text}' | strip-ansi | #{conversion} | transfer #{name}.#{format}")
