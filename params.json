{"name":"DotCastle","tagline":"a castle for my dotfiles","body":"My Dot Castle\r\n=============\r\n\r\n![DotCastle](http://cdn.obsidianportal.com/assets/38992/AldredsCastle.jpg)\r\n\r\n**castle for my dotfiles** - the cornetstone of *dev-kind* ! :)\r\n\r\nThis repository contains the dotfiles *(stolen/compiled/created)* by me.\r\nMajor inspirations from [@holman](http://github.com/holman) and\r\n[@mathiasybnens](http://github.com/mathiasbynens). More inspirations\r\nfrom [dotfiles repository](http://github.com/skwp/dotfiles) by\r\n[@skwp](http://github.com/skwp). Credit has been given where I could. :)\r\n\r\nSave dotfiles in ~/Code/\\_\\_dotfiles !!!\r\n---------------------------------------\r\n\r\nFollowing some conventions, I store all my code inside `~/Code` directory.\r\nThis has obvious *organizational* benefits.  \r\nOn similar grounds, I store my dotfiles inside `~/Code/__dotfiles` directory,\r\nwhich is more sensible in my opinion than `~/.dotfiles`, because:\r\n  - dotfiles are the heart of your code - obvious reason to have them stored\r\n    right next to all your code in `~/Code`\r\n  - dotfiles directory is in front of your eyes at all times, and hence, you\r\n    will be intrigued to change it more often than when it was hidden.\r\n  - more importantly, improving code in dotfiles implies improved productivity.\r\n\r\nInstallation\r\n------------\r\nThere will be a 80% chance you will have a reason not to use\r\n`~/Code/__dotfiles` for the installation, in which case, you can simply\r\nmodify the first line of the following bash commands to suit your taste\r\n;) Note that, `DotCastle` requires `homebrew` (or `linuxbrew`) and\r\n`ohmyzsh`, and the same can be installed manually, or via the installer\r\nscript at `./scripts/dep-installer.sh`.\r\n\r\n    export DOTCASTLE=$HOME/Code/__dotfiles\r\n    git clone git://github.com/nikhgupta/dotfiles.git $DOTCASTLE\r\n    # run the installer script\r\n    $DOTCASTLE/scripts/dep-installer.sh\r\n    $DOTCASTLE/scripts/bootstrap.sh\r\n\r\nHow my Development Environment is Setup\r\n=======================================\r\n\r\nA lot of this information can be found on my [blog](http://nikhgupta.com).\r\n\r\nPrimarily, I use a lot of tools to setup my development environment, and\r\nthanks to the *nix goodness, all fo these tools have a way to specify\r\ntheir configurations. Most of the times, I will include such\r\nconfigurations within this repository to keep them versioned.\r\n\r\nThe minimal setup that I would like to work with includes these\r\ndotfiles, as well as `base16-eighties` and `solarized` themes for both\r\niTerm2 and MacVim, along with Homebrew on my MacOSX.\r\n\r\nEverything goes inside ~/Code\r\n-----------------------------\r\n\r\nAll my code resides in the `~/Code` directory. Typically:\r\n\r\n- repositories are downloaded to the `repos` directory.\r\n- these dotfiles are present at `__dotfiles` directory.\r\n- scripts are saved to `__dotfiles/scripts` directory, and include [`subs`](https://github.com/basecamp/sub) created.\r\n- websites that I develop upon locally are present at `sites` directory.\r\n- work related code is located in `work` directory.\r\n- other personal/miscelleneous code is present in topic-wise directories\r\n  under `personal` directory.\r\n\r\niTerm2\r\n------\r\n\r\nI prefer iTerm2 over Terminal app in MacOSX, and have installed the\r\n`base16-eighties` theme for it. Note that, this requires `base16-shell`\r\nto be loaded in my ZSH configuration.\r\n    \r\nOhMyZsh!\r\n--------\r\n    \r\nI like OhMyZSH! project, which provides me with a ready-to-use ZSH\r\nconfiguration. I customize upon that heavily, but OMZ! is a major\r\ningredient.\r\n\r\nHomeBrew and packages\r\n---------------------\r\n\r\n[HomeBrew](http://brew.sh) is a necessity for development on OSX, and is\r\na really awesome package manager. I use it to install various\r\ndependencies and packages, like `macvim,` `rbenv,` `autoenv,`\r\n`zsh-syntax-highlighting` etc. If there is a formula available for\r\na particular program in Homebrew, I would prefer it over other sources.\r\nAlso, note that brew installs `zsh` completions to\r\n`/usr/local/share/zsh/site-functions` file, which helps me add custom\r\ncompletions, easily. On Ubuntu, I install the Linux version of Homebrew,\r\nnamely `Linuxbrew`.\r\n","google":"UA-35356907-1","note":"Don't delete this file! It's used internally to help with page regeneration."}