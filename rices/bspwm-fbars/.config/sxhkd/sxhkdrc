#
# wm independent hotkeys
#

# quit bspwm normally
super + q; b
  ~/.bin/sessionquit.sh

# reload bspwm configuration
super + r; b
  ~/.config/bspwm/bspwmrc && \
  notify-send "bspwm config reloaded"

# make sxhkd reload its configuration files:
super + r; s
  pkill -USR1 -x sxhkd; \
  ~/.config/polybar/launch.sh; \
  notify-send "polybar and sxhkd config reloaded" -i reload

#
# bspwm hotkeys
#

# close and kill
super + q; {_,shift + }w
  bspc node -{c,k}

# alternate between the tiled and monocle layout
super + l
  bspc desktop -l next
#   LAYOUT=$(bspc query -T -d | jq -r .layout); \
#   if [[ "$LAYOUT" == "tiled" ]]; then; \
#     polybar-msg cmd hide && bspc config top_padding 0 && bspc config bottom_padding 0; \
#   else; \
#     polybar-msg cmd show && bspc config top_padding 27 && bspc config bottom_padding 27; \
#   fi; bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
  bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
  bspc node -s biggest.local

#
# state/flags
#

# set the window state
super + s; {t,shift + t, f, shift+f}
  bspc node -t {tiled,pseudo_tiled,fullscreen,floating}

# set the node flags
super + s; {l,s,p}
  bspc node -g {locked,sticky,private}

# rotate tree in given direction
super + m; {b,n}
    bspc node @/ -C {forward,backward}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
  bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
# super + {p,b,comma,period}
#   bspc node -f @{parent,brother,first,second}

# focus the next/previous node
super + {_,shift +}{b, n}
  bspc node -{f,s} {next,prev}

# focus the next/previous desktop
super + bracket{left,right}
  bspc desktop -f {prev,next}

# focus the last node/desktop
super + {grave,Tab}
  bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + f; {o,i}
  bspc wm -h off; \
  bspc node {older,newer} -f; \
  bspc wm -h on

# focus to the given desktop
super + {1-9,0}
  space="{1-9,0}"; \
  [[ $(echo "$space <= 3" | bc) == "1" ]] && bspc desktop ^$space -f || \{ \
  xrandr -q | grep "$MONITOR1 connected" || \{ [[ $space == "0" ]] && bspc desktop ^10 -f || bspc desktop ^$space -f; \} ; \
  xrandr -q | grep "$MONITOR1 connected" && [[ $space == "0" ]] && bspc desktop ^4 -f; \
  xrandr -q | grep "$MONITOR1 connected" && [[ $space != "0" ]] && bspc desktop ^$(echo "$space + 4" | bc) -f; \
  \}
# send to the given desktop
super + shift + {1-9,0}
  space="{1-9,0}"; \
  [[ $(echo "$space <= 3" | bc) == "1" ]] && bspc node -d ^$space -f || \{ \
  xrandr -q | grep "$MONITOR1 connected" || \{ [[ $space == "0" ]] && bspc node -d ^10 -f || bspc node -d ^$space -f; \} ; \
  xrandr -q | grep "$MONITOR1 connected" && [[ $space == "0" ]] && bspc node -d ^4 -f; \
  xrandr -q | grep "$MONITOR1 connected" && [[ $space != "0" ]] && bspc node -d ^$(echo "$space + 4" | bc) -f; \
  \}

super + {_, shift + } f; {1,2,3} ; {1-9,0}
  bspc {desktop, node -d} "^{1,2,3}:^{1-9,10}" -f

# focus the next/previous node in the same window
super + {comma,period}
    bspc node -f {next,prev}.local

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
  bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
  bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
  bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
  bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
  bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
  bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
  bspc node -v {-20 0,0 20,0 -20,20 0}

super + {equal,minus}
  bspc config window_gap $(( $(bspc config window_gap) {+,-} 5 ))

super + ctrl + {Left,Right,Up,Down}
    bspc node @focused:/ --rotate {270,90,180,180}

## CUSTOM KEYBINDINGS ###


# terminal emulator
{ alt, super } + Return
  $TERMINAL

# override kitty panes shortcut with new terminal windows
ctrl + shift + Return
  $TERMINAL

# scratch terminal
{ super + d, alt + semicolon, alt + grave }
  pids=$(xdotool search --class ScratchTerm ); \
  if [ -z $pids ]; then ; \
    $TERMINAL --class ScratchTerm & ; \
    sleep 0.25; \
    pids=$(xdotool search --class ScratchTerm ); \
  fi; \
  for pid in $pids; do bspc node $pid --flag hidden -f; done

super + o; {w, c}
  google-chrome-stable

super + o; {e, v}
  code

super + o; {f, n}
  nautilus

# alt + l
#   named_terminal lyricist -e bash -c "less ~/Music/Lyrics/\"\$(mpc | grep -m1 \"\")\".txt"

# music player
super + o; m
  killall ncmpcpp; named_terminal ncmpcpp --title ncmpcpp -e ncmpcpp

# quick editing of dotfiles
super + o; d
  named_terminal fzfmenu -e zsh -c \
    "vim \$(fd -Hast f . -E .git -E .bin/__old \$DOTCASTLE | ~/.fzf/bin/fzf -1)"

# GNOME System Monitor
super + o; s
  gnome-system-monitor

alt + ctrl + Delete
  gnome-system-monitor

# program launcher
super + space
  ~/.bin/launcher.sh

alt + space
  rofi -combi-modi run,drun,window -show run -theme run

# show all sxhkd keys
shift + alt + space
  ~/.bin/rofi/sxhkd-help.sh

alt + Tab
  rofi -show window

# screen lock
super + x
  ~/.bin/screenlock.sh

{ctrl + alt, shift + alt, ctrl + shift} + l
  ~/.bin/screenlock.sh

# quit bspwm normally
ctrl + shift + alt + l
  ~/.bin/sessionquit.sh

# Screenshots
@Print
  ~/.bin/screenshot.sh sel

alt + @Print
  ~/.bin/screenshot.sh sel

ctrl + @Print
  ~/.bin/screenshot.sh window

super + @Print
  ~/.bin/screenshot.sh open

# Shift_L
#   ~/.bin/screencast.sh

# super + Shift_L
# ~/.bin/screencast.sh open

# VOLUME

# Toggle Mute
XF86AudioMute
  ~/.bin/volume.sh toggle

XF86AudioMicMute
  ~/.bin/volume.sh toggle-mic

### Master Volume
XF86AudioRaiseVolume
  ~/.bin/volume.sh raise

XF86AudioLowerVolume
  ~/.bin/volume.sh lower

### Media Keys
XF86Audio{Play,Stop,Prev,Next}
  mpc {toggle,stop,prev,next}


# BRIGHTNESS

# Brightness controls
XF86MonBrightnessUp
  light -A 5

XF86MonBrightnessDown
  light -U 5

# Toggle redshift
F9
  pkill -USR1 '^redshift$'
