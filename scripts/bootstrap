#!/usr/bin/env zsh
# Credits:       =================================================== {{{
#
#            _ _    _                       _        _
#           (_) |  | |                     | |      ( )
#      _ __  _| | _| |__   __ _ _   _ _ __ | |_ __ _|/ ___
#     | '_ \| | |/ / '_ \ / _` | | | | '_ \| __/ _` | / __|
#     | | | | |   <| | | | (_| | |_| | |_) | || (_| | \__ \
#     |_| |_|_|_|\_\_| |_|\__, |\__,_| .__/ \__\__,_| |___/
#                          __/ |     | |
#                         |___/      |_|
#                            _       _    __ _ _
#                           | |     | |  / _(_) |
#                         __| | ___ | |_| |_ _| | ___  ___
#                        / _` |/ _ \| __|  _| | |/ _ \/ __|
#                       | (_| | (_) | |_| | | | |  __/\__ \
#                        \__,_|\___/ \__|_| |_|_|\___||___/
#
#
#   Hello, I am Nikhil Gupta, and
#   You can find me at http://nikhgupta.com
#
#   You can find an online version of this file at:
#   https://github.com/nikhgupta/dotfiles/blob/master/scripts/bootstrap
#
#   ---
#
#   Script to bootstrap DotCastle, and setup dotfiles.
#
#   This script will make appropriate symlinks to the dotfiles on the
#   system, import your local configurations, and add git configuration
#   options by reading them from environment variables.
#
#   Make sure that dependencies like brew and oh-my-zsh have been
#   installed on the system before running this script. You can install
#   all dependencies by running the bundled `./scripts/dep-installer`
#   script.
#
# ================================================================== }}}

DOTCASTLE="${DOTCASTLE:-$HOME/Code/__dotfiles}"

echo "----- DotCastle - a castle for my dotfiles -----"

echo "This script will install DotCastle on this machine."
echo "Please, follow the instructions when the script finishes."
echo "DotCastle location: ~/Code/__dotfiles"
echo
echo

if [[ -z "$PRIVATES" ]]; then
  echo "Q. Where do you keep your private files, i.e. .zshrc.local, etc.?"
  echo "   Please, specify absolute path only."
  echo "   Leave empty if you want to link these files, manually."
  read "PRIVATES?A. "
fi

link_file() {
  [[ -e "$2" ]] && mv "$2" "$2.pre-dotcastle" && echo "Backed up: $2 to $2.pre-dotcastle"
  [[ -e "$1" ]] && ln -sf "$1" "$2"
}

add_git_config() {
  if [[ -n "$2" ]]; then
    git config --global $1 "$2"
  else
    echo "Please, setup '$1' for git, by running: git config --global $1 '<value>'"
  fi
}

link_file $DOTCASTLE/vim          ~/.vim
link_file $DOTCASTLE/zsh          ~/.zsh
link_file $DOTCASTLE/vimrc        ~/.vimrc
link_file $DOTCASTLE/zshrc        ~/.zshrc
link_file $DOTCASTLE/zshenv       ~/.zshenv
link_file $DOTCASTLE/gemrc        ~/.gemrc
link_file $DOTCASTLE/gitignore    ~/.gitignore
link_file $DOTCASTLE/git-template ~/.git-template
cp        $DOTCASTLE/gitconfig    ~/.gitconfig

if [[ -n "$PRIVATES" ]]; then
  link_file $PRIVATES/zshrc.local  ~/.zshrc.local
  link_file $PRIVATES/vimrc.local  ~/.vimrc.local
  link_file $PRIVATES/zshenv.local ~/.zshenv.local
else
  echo
  echo
  echo "You should, now, symlink your local configurations to:"
  echo "  ~/.zshenv.local, ~/.zshrc.local"
fi

# load user's private environment variables for setting git configuration
[[ -s ~/.zshenv       ]] && source ~/.zshenv
[[ -s ~/.zshenv.local ]] && source ~/.zshenv.local
[[ -s ~/.zshrc        ]] && source ~/.zshrc
[[ -s ~/.zshrc.local  ]] && source ~/.zshrc.local

add_git_config core.editor        $EDITOR
add_git_config user.name          $GIT_AUTHOR_NAME
add_git_config user.email         $GIT_AUTHOR_EMAIL
add_git_config github.user        $GITHUB_USER
add_git_config github.token       $GITHUB_TOKEN
add_git_config sendemail.smtpuser $GIT_GMAIL_SMTP_USER

# => install bundles for VIM
if which vim &>/dev/null; then
  echo "Run the following command to install VIM plugins, now:"
  echo "  vim +BundleInstall +qall"
fi

echo
echo "All set."
