# ################################################################ #
# THE FOLLOWING IS AN EXPLANATION OF THE GRAMMAR THAT SKHD PARSES. #
# FOR SIMPLE EXAMPLE MAPPINGS LOOK FURTHER DOWN THIS FILE..        #
# ################################################################ #

# A list of all built-in modifier and literal keywords can
# be found at https://github.com/koekeishiya/skhd/issues/1
#
# A hotkey is written according to the following rules:
#
#   hotkey       = <mode> '<' <action> | <action>
#
#   mode         = 'name of mode' | <mode> ',' <mode>
#
#   action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                  <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                  <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#   keysym       = <mod> '-' <key> | <key>
#
#   mod          = 'modifier keyword' | <mod> '+' <mod>
#
#   key          = <literal> | <keycode>
#
#   literal      = 'single letter or built-in keyword'
#
#   keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#   proc_map_lst = * <proc_map>
#
#   proc_map     = <string> ':' <command> | <string>     '~' |
#                  '*'      ':' <command> | '*'          '~'
#
#   string       = '"' 'sequence of characters' '"'
#
#   command      = command is executed through '$SHELL -c' and
#                  follows valid shell syntax. if the $SHELL environment
#                  variable is not set, it will default to '/bin/bash'.
#                  when bash is used, the ';' delimeter can be specified
#                  to chain commands.
#
#                  to allow a command to extend into multiple lines,
#                  prepend '\' at the end of the previous line.
#
#                  an EOL character signifies the end of the bind.
#
#   ->           = keypress is not consumed by skhd
#
#   *            = matches every application not specified in <proc_map_lst>
#
#   ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
# A mode is declared according to the following rules:
#
#   mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#               '::' <name> '@'               | '::' <name>
#
#   name      = desired name for this mode,
#
#   @         = capture keypresses regardless of being bound to an action
#
#   command   = command is executed through '$SHELL -c' and
#               follows valid shell syntax. if the $SHELL environment
#               variable is not set, it will default to '/bin/bash'.
#               when bash is used, the ';' delimeter can be specified
#               to chain commands.
#
#               to allow a command to extend into multiple lines,
#               prepend '\' at the end of the previous line.
#
#               an EOL character signifies the end of the bind.
# ################################################################ #
#
# The keybindings here follow vim principles of modal. You specify
# the verb, then the noun and finally the direction.
#
# I use Karabiner Elements to remap CapsLock to F19 as that key is not
# used anywhere in the system, and gives us a good starter key for our
# modals. I have also defined simpler key-bindings that can be
# triggered along with `fn` key for often used shortcuts.
#
# For example:
# - all `focus` related commands can be triggered via: F19 f
# - all `focus` related commands for spaces can be triggered via: F19 f s
# - all `focus` related commands for windows can be triggered via: F19 f w
#
# Therefore, to focus a window on right, you would do: F19 f w r
#
# Available verbs:
# - focus: focus a window/space/display
# - swap: swap a window/space/display
# - move: move/warp a window/space/display
# - grid: arrange windows in grid
# - resize: resize a window
# - launch: launch an application e.g.
#   - F19 l a c -> launch application Safari (used to be Chrome, and hence 'c')
#   - F19 l s e -> launch script to open current finder window in Visual Studio Code
#   - F19 l s h -> launch script to toggle display of hidden files in Finder
#
# Apart from hjkl keys for movement, you will also find (where they make sense):
#          m for largest
#          x for x-axis
#          y for y-axis
#   ] (0x1E) for next
#   \ (0x2A) for recent
#   [ (0x21) for previous
#   . (0x2F) for clockwise (>)
#   , (0x2B) for anti-clockwise (<)
#        0-9 for numbered nouns (0 is for 10)
#
# hjkl[]<> movements will always be defined for a given verb noun pair.
# A movement key when pressed with SHIFT will modify target to next hierarcy,
# and CMD to next to next one, e.g.. `F19 m w Shift+l` will move window to space on right,
# while `F19 m w CMD+l` will move window to display on right. ALT (option) can be used to
# trigger alternate response.
#
# For example:
# - to move all windows in a space clockwise, you would F19 m w . (as you are moving windows).
# - to move space (and all contained windows) to right, you would F19 m s KEY where KEY is one of `jl.]` (as you are
#   moving space and all these movements target next window)
#
# Since, `grid` and `resize` actions can only happen on `window`, you can shorten them, e.g. `F19 g h` to force window
# to left half. Although, remember that grid commands won't apply to windows managed using bsp layout. You can quickly
# toggle the layout to `grid` using F19 t s g (toggle space to grid layout)
#
# I don't use multiple displays - so, some related functionality may not be present or
# may not work.
#
# ################################################################ #

# modal shortcuts
# hjkl keys targets windows/space/display like vim, while m targets largest windows and
# \ targets recent, [ targets previous and ] targets next window for all commands.

:: default  : ~/.bin/macos/skhd_yabai.sh highlight_mode_default
:: active  @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_active  # listening for hotkeys - white color

:: focus  @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_focus    # focus window, spaces or displays - green color
:: swap   @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_swap     # swap windows, spaces or displays - red color
:: move   @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_move     # move (warp) windows, spaces or displays - yellow color
:: grid   @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_grid     # layout windows in grid - orange color
:: resize @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_resize   # resize windows - cyan color
:: toggle @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_toggle   # toggle window, space or display attributes - purple color
:: launch @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_launch   # launch applications or scripts - blue color
# :: warpnf @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_warpnf   # Same, but don't follow focus

:: focus_window    @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_window
:: focus_space     @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_space
:: focus_display   @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_display
:: swap_window     @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_window
:: swap_space      @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_space
:: swap_display    @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_display
:: move_window     @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_window
:: move_space      @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_space
:: move_display    @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_display
:: toggle_window   @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_window
:: toggle_space    @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_space
:: toggle_display  @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_display
:: launch_finder   @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_window
:: launch_script   @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_space
:: launch_app      @ : ~/.bin/macos/skhd_yabai.sh highlight_mode_display

# Caps Lock sends F19, which is used to activate shortcuts.
# Afterwards, tapping it again or Esc key anywhere will get us back to default shortcuts.
default < f19 ; active
active, focus, grid, swap, move, resize, toggle, launch < f19 ; default
active, focus, grid, swap, move, resize, toggle, launch < escape ; default
focus_window, focus_space, focus_display < f19 ; default
focus_window, focus_space, focus_display < escape ; default
swap_window, swap_space, swap_display < f19 ; default
swap_window, swap_space, swap_display < escape ; default
move_window, move_space, move_display < f19 ; default
move_window, move_space, move_display < escape ; default
toggle_window, toggle_space, toggle_display < f19 ; default
toggle_window, toggle_space, toggle_display < escape ; default
launch_app, launch_finder, launch_script < f19 ; default
launch_app, launch_finder, launch_script < escape ; default

# Caps Lock and then KEY takes us to respective action mode.
active < f ; focus             # green
active < g ; grid              # orange
active < s ; swap              # red
active < m ; move              # yellow
active < r ; resize            # cyan
active < t ; toggle            # purple
active < l ; launch            # blue
focus < w  ; focus_window
focus < s  ; focus_space
focus < d  ; focus_display
swap < w   ; swap_window
swap < s   ; swap_space
swap < d   ; swap_display
move < w   ; move_window
move < s   ; move_space
move < d   ; move_display
toggle < w ; toggle_window
toggle < s ; toggle_space
toggle < d ; toggle_display
grid < w   ; grid
grid < s   ; default
grid < d   ; default
resize < w ; resize
resize < s ; default
resize < d ; default
launch < a ; launch_app
launch < f ; launch_finder
launch < s ; launch_script
launch < w ; default
launch < d ; default

# focus windows
focus_window < h    : yabai -m window --focus west; skhd -k 'escape'
focus_window < j    : yabai -m window --focus south; skhd -k 'escape'
focus_window < k    : yabai -m window --focus north; skhd -k 'escape'
focus_window < l    : yabai -m window --focus east; skhd -k 'escape'
focus_window < 0x2A : yabai -m window --focus recent; skhd -k 'escape'
focus_window < 0x21 : yabai -m window --focus prev; skhd -k 'escape'
focus_window < 0x1E : yabai -m window --focus next; skhd -k 'escape'
focus_window < 0x2B : yabai -m window --focus prev; skhd -k 'escape'
focus_window < 0x2F : yabai -m window --focus next; skhd -k 'escape'
focus_window < m    : yabai -m window --focus largest; skhd -k 'escape'

# focus spaces
focus_space < h    : yabai -m space --focus prev; skhd -k 'escape'
focus_space < j    : yabai -m space --focus next; skhd -k 'escape'
focus_space < k    : yabai -m space --focus prev; skhd -k 'escape'
focus_space < l    : yabai -m space --focus next; skhd -k 'escape'
focus_space < 0x2A : yabai -m space --focus recent; skhd -k 'escape'
focus_space < 0x21 : yabai -m space --focus prev; skhd -k 'escape'
focus_space < 0x1E : yabai -m space --focus next; skhd -k 'escape'
focus_space < 0x2B : yabai -m window --focus prev; skhd -k 'escape'
focus_space < 0x2F : yabai -m window --focus next; skhd -k 'escape'
focus_space < 1    : yabai -m space --focus 1; skhd -k 'escape'
focus_space < 2    : yabai -m space --focus 2; skhd -k 'escape'
focus_space < 3    : yabai -m space --focus 3; skhd -k 'escape'
focus_space < 4    : yabai -m space --focus 4; skhd -k 'escape'
focus_space < 5    : yabai -m space --focus 5; skhd -k 'escape'
focus_space < 6    : yabai -m space --focus 6; skhd -k 'escape'
focus_space < 7    : yabai -m space --focus 7; skhd -k 'escape'
focus_space < 8    : yabai -m space --focus 8; skhd -k 'escape'
focus_space < 9    : yabai -m space --focus 9; skhd -k 'escape'
focus_space < 0    : yabai -m space --focus 10; skhd -k 'escape'

# focus display
focus_display < h    : yabai -m display --focus prev; skhd -k 'escape'
focus_display < j    : yabai -m display --focus next; skhd -k 'escape'
focus_display < k    : yabai -m display --focus prev; skhd -k 'escape'
focus_display < l    : yabai -m display --focus next; skhd -k 'escape'
focus_display < 0x2A : yabai -m display --focus recent; skhd -k 'escape'
focus_display < 0x21 : yabai -m display --focus prev; skhd -k 'escape'
focus_display < 0x1E : yabai -m display --focus next; skhd -k 'escape'
focus_display < 0x2B : yabai -m window --focus prev; skhd -k 'escape'
focus_display < 0x2F : yabai -m window --focus next; skhd -k 'escape'
focus_display < 1    : yabai -m display --focus 1; skhd -k 'escape'
focus_display < 2    : yabai -m display --focus 2; skhd -k 'escape'
focus_display < 3    : yabai -m display --focus 3; skhd -k 'escape'
focus_display < 4    : yabai -m display --focus 4; skhd -k 'escape'
focus_display < 5    : yabai -m display --focus 5; skhd -k 'escape'
focus_display < 6    : yabai -m display --focus 6; skhd -k 'escape'
focus_display < 7    : yabai -m display --focus 7; skhd -k 'escape'
focus_display < 8    : yabai -m display --focus 8; skhd -k 'escape'
focus_display < 9    : yabai -m display --focus 9; skhd -k 'escape'
focus_display < 0    : yabai -m display --focus 10; skhd -k 'escape'

# common functionality for swap/move
move_window, swap_window < x    : yabai -m space --mirror x-axis; skhd -k 'escape'
move_window, swap_window < y    : yabai -m space --mirror y-axis; skhd -k 'escape'
move_window, swap_window < 0x2B : yabai -m space --rotate 270; skhd -k 'escape'
move_window, swap_window < 0x2F : yabai -m space --rotate 90; skhd -k 'escape'

# move windows
move_window < h    : yabai -m window --warp west; skhd -k 'escape'
move_window < j    : yabai -m window --warp south; skhd -k 'escape'
move_window < k    : yabai -m window --warp north; skhd -k 'escape'
move_window < l    : yabai -m window --warp east; skhd -k 'escape'
move_window < 0x2A : yabai -m window --warp recent; skhd -k 'escape'
move_window < 0x21 : yabai -m window --warp prev; skhd -k 'escape'
move_window < 0x1E : yabai -m window --warp next; skhd -k 'escape'
move_window < m    : yabai -m window --warp largest; skhd -k 'escape'

# move windows to spaces
move_window < shift - h    : yabai -m window --space prev; yabai -m space --focus prev; skhd -k 'escape'
move_window < shift - j    : yabai -m window --space next; yabai -m space --focus next; skhd -k 'escape'
move_window < shift - k    : yabai -m window --space prev; yabai -m space --focus prev; skhd -k 'escape'
move_window < shift - l    : yabai -m window --space next; yabai -m space --focus next; skhd -k 'escape'
move_window < shift - 0x2A : yabai -m window --space recent; yabai -m space --focus recent; skhd -k 'escape'
move_window < shift - 0x21 : yabai -m window --space prev; yabai -m space --focus prev; skhd -k 'escape'
move_window < shift - 0x1E : yabai -m window --space next; yabai -m space --focus next; skhd -k 'escape'
move_window < shift - 0x2B : yabai -m window --space prev; yabai -m space --focus prev; skhd -k 'escape'
move_window < shift - 0x2F : yabai -m window --space next; yabai -m space --focus next; skhd -k 'escape'
move_window < 1            : yabai -m window --space 1; yabai -m space --focus 1; skhd -k 'escape'
move_window < 2            : yabai -m window --space 2; yabai -m space --focus 2; skhd -k 'escape'
move_window < 3            : yabai -m window --space 3; yabai -m space --focus 3; skhd -k 'escape'
move_window < 4            : yabai -m window --space 4; yabai -m space --focus 4; skhd -k 'escape'
move_window < 5            : yabai -m window --space 5; yabai -m space --focus 5; skhd -k 'escape'
move_window < 6            : yabai -m window --space 6; yabai -m space --focus 6; skhd -k 'escape'
move_window < 7            : yabai -m window --space 7; yabai -m space --focus 7; skhd -k 'escape'
move_window < 8            : yabai -m window --space 8; yabai -m space --focus 8; skhd -k 'escape'
move_window < 9            : yabai -m window --space 9; yabai -m space --focus 9; skhd -k 'escape'
move_window < 0            : yabai -m window --space 10; yabai -m space --focus 10; skhd -k 'escape'
move_window < shift - 1    : yabai -m window --space 1; yabai -m space --focus 1; skhd -k 'escape'
move_window < shift - 2    : yabai -m window --space 2; yabai -m space --focus 2; skhd -k 'escape'
move_window < shift - 3    : yabai -m window --space 3; yabai -m space --focus 3; skhd -k 'escape'
move_window < shift - 4    : yabai -m window --space 4; yabai -m space --focus 4; skhd -k 'escape'
move_window < shift - 5    : yabai -m window --space 5; yabai -m space --focus 5; skhd -k 'escape'
move_window < shift - 6    : yabai -m window --space 6; yabai -m space --focus 6; skhd -k 'escape'
move_window < shift - 7    : yabai -m window --space 7; yabai -m space --focus 7; skhd -k 'escape'
move_window < shift - 8    : yabai -m window --space 8; yabai -m space --focus 8; skhd -k 'escape'
move_window < shift - 9    : yabai -m window --space 9; yabai -m space --focus 9; skhd -k 'escape'
move_window < shift - 0    : yabai -m window --space 10; yabai -m space --focus 10; skhd -k 'escape'

# move windows to display
move_window < cmd - h    : yabai -m window --display prev; yabai -m display --focus prev; skhd -k 'escape'
move_window < cmd - j    : yabai -m window --display next; yabai -m display --focus next; skhd -k 'escape'
move_window < cmd - k    : yabai -m window --display prev; yabai -m display --focus prev; skhd -k 'escape'
move_window < cmd - l    : yabai -m window --display next; yabai -m display --focus next; skhd -k 'escape'
move_window < cmd - 0x2A : yabai -m window --display recent; yabai -m display --focus recent; skhd -k 'escape'
move_window < cmd - 0x21 : yabai -m window --display prev; yabai -m display --focus prev; skhd -k 'escape'
move_window < cmd - 0x1E : yabai -m window --display next; yabai -m display --focus next; skhd -k 'escape'
move_window < cmd - 0x2B : yabai -m window --display prev; yabai -m display --focus prev; skhd -k 'escape'
move_window < cmd - 0x2F : yabai -m window --display next; yabai -m display --focus next; skhd -k 'escape'
move_window < cmd - 1    : yabai -m window --display 1; yabai -m display --focus 1; skhd -k 'escape'
move_window < cmd - 2    : yabai -m window --display 2; yabai -m display --focus 2; skhd -k 'escape'
move_window < cmd - 3    : yabai -m window --display 3; yabai -m display --focus 3; skhd -k 'escape'
move_window < cmd - 4    : yabai -m window --display 4; yabai -m display --focus 4; skhd -k 'escape'
move_window < cmd - 5    : yabai -m window --display 5; yabai -m display --focus 5; skhd -k 'escape'
move_window < cmd - 6    : yabai -m window --display 6; yabai -m display --focus 6; skhd -k 'escape'
move_window < cmd - 7    : yabai -m window --display 7; yabai -m display --focus 7; skhd -k 'escape'
move_window < cmd - 8    : yabai -m window --display 8; yabai -m display --focus 8; skhd -k 'escape'
move_window < cmd - 9    : yabai -m window --display 9; yabai -m display --focus 9; skhd -k 'escape'
move_window < cmd - 0    : yabai -m window --display 10; yabai -m display --focus 10; skhd -k 'escape'

# move spaces
move_space < h    : yabai -m space --move prev; skhd -k 'escape'
move_space < j    : yabai -m space --move next; skhd -k 'escape'
move_space < k    : yabai -m space --move prev; skhd -k 'escape'
move_space < l    : yabai -m space --move next; skhd -k 'escape'
move_space < 0x2A : yabai -m space --move recent; skhd -k 'escape'
move_space < 0x21 : yabai -m space --move prev; skhd -k 'escape'
move_space < 0x1E : yabai -m space --move next; skhd -k 'escape'
move_space < 0x2B : yabai -m space --move prev; skhd -k 'escape'
move_space < 0x2F : yabai -m space --move next; skhd -k 'escape'
move_space < 1    : yabai -m space --move 1; skhd -k 'escape'
move_space < 2    : yabai -m space --move 2; skhd -k 'escape'
move_space < 3    : yabai -m space --move 3; skhd -k 'escape'
move_space < 4    : yabai -m space --move 4; skhd -k 'escape'
move_space < 5    : yabai -m space --move 5; skhd -k 'escape'
move_space < 6    : yabai -m space --move 6; skhd -k 'escape'
move_space < 7    : yabai -m space --move 7; skhd -k 'escape'
move_space < 8    : yabai -m space --move 8; skhd -k 'escape'
move_space < 9    : yabai -m space --move 9; skhd -k 'escape'
move_space < 0    : yabai -m space --move 10; skhd -k 'escape'

# move spaces to display
move_space < shift - h    : yabai -m space --display prev; yabai -m display --focus prev; skhd -k 'escape'
move_space < shift - j    : yabai -m space --display next; yabai -m display --focus next; skhd -k 'escape'
move_space < shift - k    : yabai -m space --display prev; yabai -m display --focus prev; skhd -k 'escape'
move_space < shift - l    : yabai -m space --display next; yabai -m display --focus next; skhd -k 'escape'
move_space < shift - 0x2A : yabai -m space --display recent; yabai -m display --focus recent; skhd -k 'escape'
move_space < shift - 0x21 : yabai -m space --display prev; yabai -m display --focus prev; skhd -k 'escape'
move_space < shift - 0x1E : yabai -m space --display next; yabai -m display --focus next; skhd -k 'escape'
move_space < shift - 0x2B : yabai -m space --display prev; yabai -m display --focus prev; skhd -k 'escape'
move_space < shift - 0x2F : yabai -m space --display next; yabai -m display --focus next; skhd -k 'escape'
move_space < shift - 1    : yabai -m space --display 1; yabai -m display --focus 1; skhd -k 'escape'
move_space < shift - 2    : yabai -m space --display 2; yabai -m display --focus 2; skhd -k 'escape'
move_space < shift - 3    : yabai -m space --display 3; yabai -m display --focus 3; skhd -k 'escape'
move_space < shift - 4    : yabai -m space --display 4; yabai -m display --focus 4; skhd -k 'escape'
move_space < shift - 5    : yabai -m space --display 5; yabai -m display --focus 5; skhd -k 'escape'
move_space < shift - 6    : yabai -m space --display 6; yabai -m display --focus 6; skhd -k 'escape'
move_space < shift - 7    : yabai -m space --display 7; yabai -m display --focus 7; skhd -k 'escape'
move_space < shift - 8    : yabai -m space --display 8; yabai -m display --focus 8; skhd -k 'escape'
move_space < shift - 9    : yabai -m space --display 9; yabai -m display --focus 9; skhd -k 'escape'
move_space < shift - 0    : yabai -m space --display 10; yabai -m display --focus 10; skhd -k 'escape'

# swap windows
swap_window < h            : yabai -m window --swap west; skhd -k 'escape'
swap_window < j            : yabai -m window --swap south; skhd -k 'escape'
swap_window < k            : yabai -m window --swap north; skhd -k 'escape'
swap_window < l            : yabai -m window --swap east; skhd -k 'escape'
swap_window < 0x2A         : yabai -m window --swap recent; skhd -k 'escape'
swap_window < 0x21         : yabai -m window --swap prev; skhd -k 'escape'
swap_window < 0x1E         : yabai -m window --swap next; skhd -k 'escape'
swap_window < m            : yabai -m window --swap largest; skhd -k 'escape'
swap_window < 1            : yabai -m window --space 1; yabai -m space --focus 1; skhd -k 'escape'
swap_window < 2            : yabai -m window --space 2; yabai -m space --focus 2; skhd -k 'escape'
swap_window < 3            : yabai -m window --space 3; yabai -m space --focus 3; skhd -k 'escape'
swap_window < 4            : yabai -m window --space 4; yabai -m space --focus 4; skhd -k 'escape'
swap_window < 5            : yabai -m window --space 5; yabai -m space --focus 5; skhd -k 'escape'
swap_window < 6            : yabai -m window --space 6; yabai -m space --focus 6; skhd -k 'escape'
swap_window < 7            : yabai -m window --space 7; yabai -m space --focus 7; skhd -k 'escape'
swap_window < 8            : yabai -m window --space 8; yabai -m space --focus 8; skhd -k 'escape'
swap_window < 9            : yabai -m window --space 9; yabai -m space --focus 9; skhd -k 'escape'
swap_window < 0            : yabai -m window --space 10; yabai -m space --focus 10; skhd -k 'escape'
swap_window < shift - 1    : yabai -m window --space 1; yabai -m space --focus 1; skhd -k 'escape'
swap_window < shift - 2    : yabai -m window --space 2; yabai -m space --focus 2; skhd -k 'escape'
swap_window < shift - 3    : yabai -m window --space 3; yabai -m space --focus 3; skhd -k 'escape'
swap_window < shift - 4    : yabai -m window --space 4; yabai -m space --focus 4; skhd -k 'escape'
swap_window < shift - 5    : yabai -m window --space 5; yabai -m space --focus 5; skhd -k 'escape'
swap_window < shift - 6    : yabai -m window --space 6; yabai -m space --focus 6; skhd -k 'escape'
swap_window < shift - 7    : yabai -m window --space 7; yabai -m space --focus 7; skhd -k 'escape'
swap_window < shift - 8    : yabai -m window --space 8; yabai -m space --focus 8; skhd -k 'escape'
swap_window < shift - 9    : yabai -m window --space 9; yabai -m space --focus 9; skhd -k 'escape'
swap_window < shift - 0    : yabai -m window --space 10; yabai -m space --focus 10; skhd -k 'escape'

# swap spaces
swap_space < h    : yabai -m space --swap prev; skhd -k 'escape'
swap_space < j    : yabai -m space --swap next; skhd -k 'escape'
swap_space < k    : yabai -m space --swap prev; skhd -k 'escape'
swap_space < l    : yabai -m space --swap next; skhd -k 'escape'
swap_space < 0x2A : yabai -m space --swap recent; skhd -k 'escape'
swap_space < 0x21 : yabai -m space --swap prev; skhd -k 'escape'
swap_space < 0x1E : yabai -m space --swap next; skhd -k 'escape'
swap_space < 0x2B : yabai -m space --swap prev; skhd -k 'escape'
swap_space < 0x2F : yabai -m space --swap next; skhd -k 'escape'
swap_space < 1    : yabai -m space --swap 1; skhd -k 'escape'
swap_space < 2    : yabai -m space --swap 2; skhd -k 'escape'
swap_space < 3    : yabai -m space --swap 3; skhd -k 'escape'
swap_space < 4    : yabai -m space --swap 4; skhd -k 'escape'
swap_space < 5    : yabai -m space --swap 5; skhd -k 'escape'
swap_space < 6    : yabai -m space --swap 6; skhd -k 'escape'
swap_space < 7    : yabai -m space --swap 7; skhd -k 'escape'
swap_space < 8    : yabai -m space --swap 8; skhd -k 'escape'
swap_space < 9    : yabai -m space --swap 9; skhd -k 'escape'
swap_space < 0    : yabai -m space --swap 10; skhd -k 'escape'

# swap spaces to display
swap_space < shift - h    : yabai -m space --display prev; yabai -m display --focus prev; skhd -k 'escape'
swap_space < shift - j    : yabai -m space --display next; yabai -m display --focus next; skhd -k 'escape'
swap_space < shift - k    : yabai -m space --display prev; yabai -m display --focus prev; skhd -k 'escape'
swap_space < shift - l    : yabai -m space --display next; yabai -m display --focus next; skhd -k 'escape'
swap_space < shift - 0x2A : yabai -m space --display recent; yabai -m display --focus recent; skhd -k 'escape'
swap_space < shift - 0x21 : yabai -m space --display prev; yabai -m display --focus prev; skhd -k 'escape'
swap_space < shift - 0x1E : yabai -m space --display next; yabai -m display --focus next; skhd -k 'escape'
swap_space < shift - 0x2B : yabai -m space --display prev; yabai -m display --focus prev; skhd -k 'escape'
swap_space < shift - 0x2F : yabai -m space --display next; yabai -m display --focus next; skhd -k 'escape'
swap_space < shift - 1    : yabai -m space --display 1; yabai -m display --focus 1; skhd -k 'escape'
swap_space < shift - 2    : yabai -m space --display 2; yabai -m display --focus 2; skhd -k 'escape'
swap_space < shift - 3    : yabai -m space --display 3; yabai -m display --focus 3; skhd -k 'escape'
swap_space < shift - 4    : yabai -m space --display 4; yabai -m display --focus 4; skhd -k 'escape'
swap_space < shift - 5    : yabai -m space --display 5; yabai -m display --focus 5; skhd -k 'escape'
swap_space < shift - 6    : yabai -m space --display 6; yabai -m display --focus 6; skhd -k 'escape'
swap_space < shift - 7    : yabai -m space --display 7; yabai -m display --focus 7; skhd -k 'escape'
swap_space < shift - 8    : yabai -m space --display 8; yabai -m display --focus 8; skhd -k 'escape'
swap_space < shift - 9    : yabai -m space --display 9; yabai -m display --focus 9; skhd -k 'escape'
swap_space < shift - 0    : yabai -m space --display 10; yabai -m display --focus 10; skhd -k 'escape'

# grid windows - make non-managed/floating window occupy a certain position
grid < h       : yabai -m window --grid 1:2:0:0:1:1; skhd -k 'escape'
grid < j       : yabai -m window --grid 2:1:0:1:1:1; skhd -k 'escape'
grid < k       : yabai -m window --grid 2:1:0:0:1:1; skhd -k 'escape'
grid < l       : yabai -m window --grid 1:2:1:0:1:1; skhd -k 'escape'
grid < m       : yabai -m window --grid 1:1:0:0:1:1; skhd -k 'escape'
grid < alt - h : yabai -m window --grid 2:2:0:0:1:1; skhd -k 'escape'
grid < alt - j : yabai -m window --grid 2:2:0:1:1:1; skhd -k 'escape'
grid < alt - k : yabai -m window --grid 2:2:1:0:1:1; skhd -k 'escape'
grid < alt - l : yabai -m window --grid 2:2:1:1:1:1; skhd -k 'escape'
# toggle window to make it float and center - alias for F19-rm
grid < alt - m : yabai -m window --toggle float; yabai -m window --grid 4:4:1:1:2:2; skhd -k 'escape'

# resize window - we do not exit this mode automatically.
resize < h       : yabai -m window --resize left:-20:0
resize < j       : yabai -m window --resize bottom:0:20
resize < k       : yabai -m window --resize top:0:-20
resize < l       : yabai -m window --resize right:20:0
resize < alt - h : yabai -m window --resize left:20:0
resize < alt - j : yabai -m window --resize bottom:0:-20
resize < alt - k : yabai -m window --resize top:0:20
resize < alt - l : yabai -m window --resize right:-20:0
resize < 0x18    : yabai -m space --balance; skhd -k 'escape'
# maximize window -> alias for F19-gm and F19-twm or better fn-m
resize < m       : yabai -m window --grid 1:1:0:0:1:1; skhd -k 'escape'
# toggle window to make it float and center
resize < c       : yabai -m window --toggle float; yabai -m window --grid 4:4:1:1:2:2; skhd -k 'escape'

# toggle window or space attributes
toggle_window < f       : yabai -m window --toggle float; skhd -k 'escape'
toggle_window < s       : yabai -m window --toggle sticky; skhd -k 'escape'
toggle_window < t       : yabai -m window --toggle topmost; skhd -k 'escape'
toggle_window < b       : yabai -m window --toggle border; skhd -k 'escape'
toggle_window < i       : yabai -m window --toggle split; skhd -k 'escape'
toggle_window < p       : yabai -m window --toggle pip; skhd -k 'escape'
toggle_window < z       : yabai -m window --toggle zoom-parent; skhd -k 'escape'
toggle_window < m       : yabai -m window --toggle zoom-fullscreen; skhd -k 'escape'
toggle_window < shift-m : yabai -m window --toggle native-fullscreen; skhd -k 'escape'
toggle_window < q       : yabai -m window --close; skhd -k 'escape'
toggle_space  < o       : yabai -m space --toggle padding; yabai -m space --toggle gap; skhd -k 'escape'
toggle_space  < 0x18    : yabai -m space --balance; skhd -k 'escape'
toggle_space  < b       : yabai -m space --layout bsp; skhd -k 'escape'
toggle_space  < f       : yabai -m space --layout float; skhd -k 'escape'
toggle_space  < s       : yabai -m space --layout stack; skhd -k 'escape'
toggle_space  < d       : yabai -m space --toggle show-desktop; skhd -k 'escape'
# toggle window to make it float and center
toggle_window < c       : yabai -m window --toggle float; yabai -m window --grid 4:4:1:1:2:2; skhd -k 'escape'

# launch new terminal window
launch, launch_app, launch_script < t      : skhd -k 'escape'; ~/.bin/macos/new-terminal.applescript
# open current finder window in terminal
launch, launch_app, launch_script < return : skhd -k 'escape'; ~/.bin/macos/new-terminal.applescript finder
# launch apps
launch, launch_app < c                     : skhd -k 'escape'; open -a 'Safari'
launch, launch_app < m                     : skhd -k 'escape'; open -a 'Mail'

# # launch quick commands/scripts - cant use: t return
# restart skhd alone
launch_script < k : skhd -k 'escape'; terminal-notifier -message 'restarting skhd' -title 'skhd' -sender com.koekeishiya.skhd; brew services restart skhd
# restart yabai and skhd
launch_script < r : skhd -k 'escape'; terminal-notifier -message 'restarting skhd and yabai' -title 'skhd' -sender com.koekeishiya.skhd; brew services restart skhd; brew services restart yabai
# open visual studio code in current finder window
launch_script < e : skhd -k 'escape'; open -a "Visual Studio Code" "$(~/.bin/macos/current-finder.applescript)"
# toggle dock auto-hide
launch_script < d : skhd -k 'escape'; osascript -e 'tell application "System Events" to set autohide of dock preferences to not (get autohide of dock preferences)'
# toggle finder hidden files
launch_script < h : skhd -k 'escape'; osascript -e 'tell application "System Events" to keystroke "." using {command down, shift down}'
# toggle dark mode
launch_script < n : skhd -k 'escape'; osascript -e 'tell application "System Events" to tell appearance preferences to set dark mode to not dark mode'
# toggle do not disturb mode!
# launch_script < m : shkd -k 'escape'; osascript -e "ignoring application responses\ntell application \"System Events\" to keystroke \"D\" using {command down, shift down, option down, control down}\nend ignoring"
# TODO: toggle night shift, true tone? maybe via Shifty?

# launch finder windows
launch_finder < a : skhd -k 'escape'; open ~/Applications
launch_finder < c : skhd -k 'escape'; open ~/Code
launch_finder < d : skhd -k 'escape'; open ~/Downloads
launch_finder < h : skhd -k 'escape'; open ~
launch_finder < m : skhd -k 'escape'; open ~/Music
launch_finder < o : skhd -k 'escape'; open ~/OneDrive
launch_finder < p : skhd -k 'escape'; open ~/Pictures
launch_finder < s : skhd -k 'escape'; open ~/Pictures/Screenshots
launch_finder < w : skhd -k 'escape'; open ~/Code/work
launch_finder < x : skhd -k 'escape'; open ~/Dropbox
# ################################################################ #

# # GLOBAL COMMANDS
fn - c : open -a 'Safari'
fn - e : open -a 'Visual Studio Code'
fn - f : open ~/Downloads
fn - t : ~/.bin/macos/new-terminal.applescript
cmd - return : ~/.bin/macos/new-terminal.applescript

# focus window
fn - h : yabai -m window --focus west
fn - j : yabai -m window --focus south
fn - k : yabai -m window --focus north
fn - l : yabai -m window --focus east
fn - m : yabai -m window --toggle zoom-fullscreen; yabai -m window --grid 1:1:0:0:1:1
fn - b : yabai -m space --layout bsp
fn - s : yabai -m space --layout stack
fn + alt - 0x2A : yabai -m window --focus recent
fn + alt - 0x21 : yabai -m window --focus prev
fn + alt - 0x1E : yabai -m window --focus next

# swap window
fn + shift - h : yabai -m window --swap west
fn + shift - j : yabai -m window --swap south
fn + shift - k : yabai -m window --swap north
fn + shift - l : yabai -m window --swap east

# fast focus desktop
fn - 1 : yabai -m space --focus 1
fn - 2 : yabai -m space --focus 2
fn - 3 : yabai -m space --focus 3
fn - 4 : yabai -m space --focus 4
fn - 5 : yabai -m space --focus 5
fn - 6 : yabai -m space --focus 6
fn - 7 : yabai -m space --focus 7
fn - 8 : yabai -m space --focus 8
fn - 9 : yabai -m space --focus 9
fn - 0 : yabai -m space --focus 10
fn - 0x2A : yabai -m space --focus recent
fn - 0x21 : yabai -m space --focus prev
fn - 0x1E : yabai -m space --focus next

# send window to desktop and follow it
fn + shift - 1 : yabai -m window --space  1; yabai -m space --focus 1
fn + shift - 2 : yabai -m window --space  2; yabai -m space --focus 2
fn + shift - 3 : yabai -m window --space  3; yabai -m space --focus 3
fn + shift - 4 : yabai -m window --space  4; yabai -m space --focus 4
fn + shift - 5 : yabai -m window --space  5; yabai -m space --focus 5
fn + shift - 6 : yabai -m window --space  6; yabai -m space --focus 6
fn + shift - 7 : yabai -m window --space  7; yabai -m space --focus 7
fn + shift - 8 : yabai -m window --space  8; yabai -m space --focus 8
fn + shift - 9 : yabai -m window --space  9; yabai -m space --focus 9
fn + shift - 0 : yabai -m window --space 10; yabai -m space --focus 10
fn + shift - 0x2A : yabai -m window --space recent; yabai -m space --focus recent
fn + shift - 0x21 : yabai -m window --space prev; yabai -m space --focus prev
fn + shift - 0x1E : yabai -m window --space next; yabai -m space --focus next

# focus display
fn + cmd - 1  : yabai -m display --focus 1
fn + cmd - 2  : yabai -m display --focus 2
fn + cmd - 3  : yabai -m display --focus 3
fn + cmd - 0x2A  : yabai -m display --focus recent
fn + cmd - 0x21  : yabai -m display --focus prev
fn + cmd - 0x1E  : yabai -m display --focus next

# # send window to display and follow focus
fn + cmd + shift - 1  : yabai -m window --display 1; yabai -m display --focus 1
fn + cmd + shift - 2  : yabai -m window --display 2; yabai -m display --focus 2
fn + cmd + shift - 3  : yabai -m window --display 3; yabai -m display --focus 3
fn + cmd + shift - 0x2A  : yabai -m window --display recent; yabai -m display --focus recent
fn + cmd + shift - 0x21  : yabai -m window --display prev; yabai -m display --focus prev
fn + cmd + shift - 0x1E  : yabai -m window --display next; yabai -m display --focus next

# # move window
# fn + ctrl - a : yabai -m window --move rel:-20:0
# fn + ctrl - s : yabai -m window --move rel:0:20
# fn + ctrl - w : yabai -m window --move rel:0:-20
# fn + ctrl - d : yabai -m window --move rel:20:0

# # increase window size
# fn + ctrl - h : yabai -m window --resize left:-20:0
# fn + ctrl - j : yabai -m window --resize bottom:0:20
# fn + ctrl - k : yabai -m window --resize top:0:-20
# fn + ctrl - l : yabai -m window --resize right:20:0

# # decrease window size
# fn + ctrl + shift - h : yabai -m window --resize left:20:0
# fn + ctrl + shift - j : yabai -m window --resize bottom:0:-20
# fn + ctrl + shift - k : yabai -m window --resize top:0:20
# fn + ctrl + shift - l : yabai -m window --resize right:-20:0

# # set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west
# ctrl + alt - j : yabai -m window --insert south
# ctrl + alt - k : yabai -m window --insert north
# ctrl + alt - l : yabai -m window --insert east

# # toggle sticky, float and resize to picture-in-picture size
# fn - p : yabai -m window --toggle sticky; yabai -m window --grid 5:5:4:0:1:1
