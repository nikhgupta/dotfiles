#!/usr/bin/env zsh
#
# ZSH Configuration for Nikhil Gupta.
#
#   <http://github.com/nikhgupta>
#
# ===================================

# Dependencies {{{
# - cowsay
# - fortune
# - dos2unix
# }}}
# Behaviour: Basic locales and ZSH options {{{
LANG=en_US.UTF-8
LC_ALL=en_US.UTF-8
skip_global_compinit=1

# Reference: http://zsh.sourceforge.net/Doc/Release/Options.html
setopt auto_pushd               # cd pushes the old directory onto directory stack
setopt pushd_silent             # be quiet when using pushd
setopt pushd_ignore_dups        # only push unique values in directorys stack
setopt menu_complete            # complete first option when ambiguous
setopt hist_expire_dups_first   # expire older dup commands first in history
setopt hist_find_no_dups        # do not find dupes when searching history
setopt hist_ignore_space        # do not add commands with a leading space in history
setopt hist_no_store            # do not add 'history' command in history
setopt rm_star_wait             # wait for 10 seconds before accepting the answer
unsetopt rm_star_silent         # Query the user on such a removal
unsetopt nomatch
unsetopt correct_all

# other terminal related basic configuration
typeset -U path # set $path variable to only have unique values
export TERM=xterm-256color
# }}}
# # Behaviour: Vim Key bindings in ZSH {{{
# bindkey -v
# zle_default_mode='ins'
# zle_ins_more_like_emacs='yes'
# bindkey -M viins 'jj' vi-cmd-mode
# bindkey '\e[A' history-beginning-search-backward
# bindkey '\e[B' history-beginning-search-forward
# bindkey '^R' history-incremental-search-backward
# # }}}
# Behaviour: Custom variables {{{
export EDITOR="vim"
export DEV_SERVER=0
export ZSH_THEME="blinks"
export SSH_KEY="$HOME/.ssh/`whoami`.pub"

# Which OS?
[[ `uname -a` =~ "Darwin" ]] && export ZSH_OS='macosx'
[[ `uname -a` =~ "Ubuntu" ]] && export ZSH_OS='ubuntu' 

# # uncomment to enable debugging this ZSH configuration.
# export ZSH_DEBUG=1

# some useful directories
export ZSH="$HOME/.oh-my-zsh" # do not rename this variable - needed by OH MY ZSH??
export CODE_DIR="$HOME/Code"
export DOT_DIR="$CODE_DIR/__dotfiles"
export ZSH_DIR="$DOT_DIR/zsh"
export VIM_DIR="$DOT_DIR/vim"
export SCRIPT_DIR="$CODE_DIR/scripts"
# }}}
# Behaviour: GUI {{{
# Base16 Shell
BASE16_SCHEME="eighties"
BASE16_SHELL="$HOME/.config/base16-shell/base16-$BASE16_SCHEME.dark.sh"
[[ -s $BASE16_SHELL ]] && . $BASE16_SHELL
# }}}
# Behaviour: ZSH Plug-ins {{{
# TODO: move osx specific plugins to separate file.
plugins=(fasd battery brew coffee colored-man common-aliases composer copydir
copyfile cp extract gem git-flow git-extras git github gitignore heroku
history-substring-search osx rails systemadmin thor vundle web-search
zsh-syntax-highlighting)
# }}}
# Behaviour: Custom functions {{{
function installed() {
  for exbin in $@; do
    which $exbin >/dev/null || return 1
  done
  return 0
}
# custom function to source a file with debugging support.
function source_file() {
  if [[ -s "$1" ]]; then
    source "$1"; (( $ZSH_DEBUG )) && echo "Loading configuration file.. $1"
  elif (( $ZSH_DEBUG )); then
    echo "Configuration file not found: $1"
  fi
}
# if this is not a reloaded shell, add some paths to $PATH
add_to_path_nicely() { # $1 -> path, $2 -> add to start?
  newpath=$1; at_start=$2
  if [ -z "${path}" ]; then path=( "${newpath}" );
  elif [ -d "${newpath}" ]; then
    [ -z "${at_start}" ] && path+=( "${newpath}" ) || path=( "${newpath}" "${path[@]}" )
  else echo "Non-existent directory added to \$PATH: $1"; fi
}
# }}}
# Behaviour: Source files before ZSH configuration is really loaded {{{
# load OhMyZSH, because its auwesomeeee :)
source_file "$ZSH/oh-my-zsh.sh"
# for our secret somethings | symlinked <= $DOTDIR/private.symlink
source_file "$HOME/.private"
# (create, if required) any specific configuration that needs to be changed.
source_file "$HOME/.localrc.before"
# sets some of the configuration options
source_file "$HOME/.localrc"
# (create, if required) anything that needs to run before loading zsh files
source_file "$HOME/.zshrc.before"
# }}}
# Behaviour: $PATH overloading {{{
# # add path to local bin files
# add_to_path_nicely "${HOME}/Code/scripter/bin"
# # add android sdk tools
# add_to_path_nicely "${HOME}/Code/android/sdk/tools"
# # add pear to our path
# add_to_path_nicely "/usr/local/pear/bin"
# }}}
# # Behaviour: Python environment {{{
# if [[ -s /usr/local/bin/virtualenvwrapper.sh ]]; then
#  source /usr/local/bin/virtualenvwrapper.sh
# fi
# # pip should only run if there is a virtualenv currently activated
# export PIP_REQUIRE_VIRTUALENV=true
# # cache pip-installed packages to avoid re-downloading
# export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache
# # virtualenv wrapper support
# export WORKON_HOME=~/Code/python/VirtualEnvs
# # make pip use the virtualenv dir
# export PIP_VIRTUALENV_BASE=$WORKON_HOME
# # }}}
# Behaviour: Source files after ZSH configuration has been loaded {{{
for config_file in prompt scripts functions aliases via_terminal config; do
  source_file $ZSH_DIR/common/$config_file.zsh
  source_file $ZSH_DIR/$ZSH_OS/$config_file.zsh
done
# (create, if required) specify any other commands or configuration options here...
source_file "$HOME/.zshrc.after"   # keep over-riding or custom settings here
source_file "$HOME/.localrc.after" # keep over-riding or custom exports here
# }}}
# Behaviour: ZSH auto-completion {{{
# complete -F _todo t # for todo.txt-cli
# }}}
# Behaviour: Miscelleneous {{{
if [ -f ~/.zsh_nocorrect ]; then
    while read -r COMMAND; do
        alias $COMMAND="nocorrect $COMMAND"
    done < ~/.zsh_nocorrect
fi
# }}}
